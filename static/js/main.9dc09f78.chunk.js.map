{"version":3,"sources":["components/images/bg-stars.svg","components/images/pattern-hills.svg","components/images/icon-facebook.svg","components/images/icon-instagram.svg","components/images/icon-pinterest.svg","components/TimerCard.jsx","components/Timer.jsx","components/Header.jsx","components/Attribution.jsx","components/FooterIcons.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["module","exports","TimerCard","props","className","Num","underText","Timer","useState","myDay","setMyDays","myHours","setMyHours","myMinute","setMyMinute","mySecs","setMysecs","examDate","Date","getTime","setInterval","now","difference","examDay","Math","floor","hour","examHours","minute","examMinute","second","examSecond","trial","Header","Attribution","href","target","FooterIcons","src","Facebook","alt","Instagram","Pinterest","Footer","style","backgroundImage","BottombgIMg","height","backgroundRepeat","App","TopbgIMg","ReactDOM","render","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,qHCa5BC,EAXG,SAACC,GACf,OACI,6BACI,yBAAKC,UAAU,aACX,2BAAID,EAAME,MAEd,uBAAGD,UAAU,aAAaD,EAAMG,aC0D7BC,EA/DD,WAEV,MAA2BC,mBAAS,GAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA4BN,mBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGMC,EAAW,IAAIC,KAAK,6BAA6BC,UAiCvD,OAJAC,aAAY,YA1BZ,WAEI,IAAMC,GAAM,IAAIH,MAAOC,UAEjBG,EAAaL,EAAWI,EASxBE,EAAUC,KAAKC,MAAMH,EAHdI,OAIPC,EAAYH,KAAKC,MAAOH,EAJjBI,MADAE,MAMPC,EAAaL,KAAKC,MAAOH,EANlBM,KADEE,KAQTC,EAAaP,KAAKC,MAAOH,EARhBQ,IADA,KAYfpB,EAAUa,GACVX,EAAWe,GACXb,EAAYe,GACZb,EAAUe,GAKVC,KACD,KAGC,yBAAK5B,UAAU,SACX,kBAAC,EAAD,CACIC,IAAOI,EACPH,UAAY,SAEhB,kBAAC,EAAD,CACID,IAAOM,EACPL,UAAY,UAEhB,kBAAC,EAAD,CACID,IAAOQ,EACPP,UAAY,YAEhB,kBAAC,EAAD,CACID,IAAOU,EACPT,UAAY,cChDb2B,EATA,WACX,OACI,gCACI,uDACA,kBAAC,EAAD,Q,gCCQGC,EAbK,WAGhB,OACI,6BACI,yBAAK9B,UAAU,eAAf,gBACiB,uBAAG+B,KAJT,8CAI6BC,OAAO,UAA9B,mBADjB,cAEa,uBAAGD,KANH,4CAMA,oBAFb,O,gDCQGE,EAVK,WAChB,OACI,yBAAKjC,UAAU,gBACX,yBAAKkC,IAAKC,IAAUC,IAAI,aACxB,yBAAKF,IAAKG,IAAWD,IAAI,cACzB,yBAAKF,IAAKI,IAAWF,IAAI,gBCItBG,EATA,WACX,OACI,4BAAQvC,UAAU,SAASwC,MAAO,CAACC,gBAAe,cAAUC,IAAV,KAA0BC,OAAQ,OAAQC,iBAAmB,cAC3G,kBAAC,EAAD,MACA,kBAAC,EAAD,QCKGC,EATH,WACR,OACI,yBAAKL,MAAO,CAACC,gBAAe,cAAUK,IAAV,KAAuBH,OAAS,UACxD,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLZI,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9dc09f78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-stars.3661648f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pattern-hills.8fad4803.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.33fc1888.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.40c2e0b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pinterest.67ee8378.svg\";","import React from 'react'\r\n\r\nconst TimerCard = (props) => {\r\n    return (\r\n        <div>\r\n            <div className='TimerCard'>\r\n                <p>{props.Num}</p>\r\n            </div>\r\n            <p className='underText'>{props.underText}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimerCard\r\n","import React, {useState} from 'react'\r\nimport TimerCard from './TimerCard';\r\n\r\nconst Timer = () => {\r\n    // using use state to set the initial values for the timer\r\n    const [myDay, setMyDays] = useState(0)\r\n    const [myHours, setMyHours] = useState(0)\r\n    const [myMinute, setMyMinute] = useState(0)\r\n    const [mySecs, setMysecs] = useState(0)\r\n\r\n    // getting and setting the date of my altschool exam\r\n    const examDate = new Date(\"February 3, 2022 00:00:00\").getTime();\r\n\r\n    // this function is made so the setInterval method can be used to update the time after 1000ms\r\n    function trial() {\r\n        // getting the current time\r\n        const now = new Date().getTime();\r\n        // subtracting the exam date from the current date to get the differnce between both days\r\n        const difference = examDate - now;\r\n        \r\n        // the calculation for getting the seconds, minutes, hours and days from the difference above\r\n        const second = 1000;\r\n        const minute = second * 60;\r\n        const hour = minute * 60;\r\n        const day =  hour * 24;\r\n\r\n        // the calculation\r\n        const examDay = Math.floor(difference/day);\r\n        const examHours = Math.floor((difference % day) / hour)\r\n        const examMinute = Math.floor((difference % hour) / minute)\r\n        const examSecond = Math.floor((difference % minute) / second)\r\n\r\n        // after the calculation is done, you get static values which would be passed into the setMydays, setMyHours, setMyMinute, SetMySeconds to update the previously set values al this happens as a result of useState\r\n        setMyDays(examDay)\r\n        setMyHours(examHours)\r\n        setMyMinute(examMinute)\r\n        setMysecs(examSecond)\r\n    }\r\n\r\n    // this is used to update the trial function so it can countdown.\r\n    setInterval(() => {\r\n        trial()\r\n    }, 1000);\r\n\r\n    return (\r\n        <div className='Timer'>\r\n            <TimerCard\r\n                Num = {myDay}\r\n                underText = \"DAYS\"\r\n            />\r\n            <TimerCard\r\n                Num = {myHours}\r\n                underText = \"HOURS\"\r\n            />\r\n            <TimerCard\r\n                Num = {myMinute}\r\n                underText = \"MINUTES\"\r\n            />\r\n            <TimerCard\r\n                Num = {mySecs}\r\n                underText = \"SECONDS\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport Timer from './Timer'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Aahil's AltSchool Timer</h1>\r\n            <Timer/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Attribution = () => {\r\n    var myPersonalLink = \"https://aahil13.github.io/personal-site/\"\r\n    var frontendLink = \"https://www.frontendmentor.io?ref=challenge\"\r\n    return (\r\n        <div>\r\n            <div className='attribution'>\r\n                Challenge by <a href={frontendLink} target=\"_blank\">Frontend Mentor</a>. \r\n                Coded by <a href={myPersonalLink}>Onyeanuna Prince</a>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Attribution\r\n","import React from 'react'\r\nimport Facebook from './images/icon-facebook.svg'\r\nimport Instagram from './images/icon-instagram.svg'\r\nimport Pinterest from './images/icon-pinterest.svg'\r\n\r\nconst FooterIcons = () => {\r\n    return (\r\n        <div className='footer-icons'>\r\n            <img src={Facebook} alt='facebook'></img>\r\n            <img src={Instagram} alt='instagram'></img>\r\n            <img src={Pinterest} alt='pinterest'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterIcons\r\n","import React from 'react'\r\nimport BottombgIMg from './images/pattern-hills.svg'\r\nimport Attribution from './Attribution'\r\nimport FooterIcons from './FooterIcons'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='footer' style={{backgroundImage : `url(${BottombgIMg})`, height: \"30vh\", backgroundRepeat : \"no-repeat\"}}>\r\n            <FooterIcons/>\r\n            <Attribution/>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport TopbgIMg from './images/bg-stars.svg'\r\nimport Footer from './Footer'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div style={{backgroundImage : `url(${TopbgIMg})`, height : \"100vh\"}}>\r\n            <Header/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App.jsx'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}